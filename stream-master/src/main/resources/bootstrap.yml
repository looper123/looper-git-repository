spring:
  application:
    name: stream-master
  cloud:
#  给input通道进行分组 且同一组中只有一台实例会收到消息（轮询接收消息 这次由实例a接收 下次由实例b接收）
    stream:
      bindings:
#      通道名称
#        input:
##         指定通道间的连接 (两个微服务之间的转换 只能在其中一个中书写 )
#          destination: output
        output:
#         可以为单个channel设置单独绑定器
#          binder: kafka
#         设置不同环境下的rabbit
#          binder: rabbit1
          destination: greetings
          producer:
#          分区表达式规则  默认 payload 表示把发送通道中的所有消息发送出去
#           根据partitionKey 计算出消息发送目的地
            partitionKeyExpression: payload.partitionKey
#            消息分区数量 >=2
            partitionCount: 2
#       设置默认绑定器   如果环境下存在多个  没有此配置 spring无法识别使用哪一个
      default-binder: rabbit
    config:
      uri: http://configserver:8888
      profile: rabbit
      name: stream
#      对应config-server中的用户名和密码
      username: admin
#      配置中心自动解密
      password: admin
#    快速失败与响应重试
      fail-fast: true
      retry:
#      初始间隔
        initial-interval: 2000
#        最大间隔
        max-interval: 10000
#       每一个间隔之前的乘数（2s,2.2s....10s）
        multiplier: 2
#        重试次数
        max-attempts: 10



