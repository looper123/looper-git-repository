server:
  port: 8888


#会在所有actuator 提供的端点前一个指定前缀 对
#应在eureka检查端点上也需要做出相应配置
management:
#  context-path: /admin
# endpoint 访问认证
  security:
      enabled: true



#配置多个注册中心 逗号分隔
eureka:
  client:
      service-url:
            defaultZone: http://discovery:8761/eureka
      registry-fetch-interval-seconds: 10
      register-with-eureka: true
  #    抓取注册的服务
      fetch-registry: true
  #    初始化实例信息到eureka的时间
      initial-instance-info-replication-interval-seconds: 10
  #    更新实例变化信息到eureka的时间
      instance-info-replication-interval-seconds: 10
  instance:
    hostname: configserver
#    non-secure-port: 80
#    lease-renewal-interval-in-seconds: 10
#    注册中心健康状况页 http://configserver:8888/health
    health-check-url-path: ${management.context-path}/health
#    注册中心状态页 http://configserver:8888/health
    status-page-url-path: ${management.context-path}/info
    prefer-ip-address: true
#   心跳频率（10向服务器发送一次心跳）
    lease-renewal-interval-in-seconds: 10
#    服务超时（服务停止20秒后 剔除出服务列表）
    lease-expiration-duration-in-seconds: 20





#spring-sercurity
security:
  user:
#   需要在对应客户端添加用户 密码信息 否则无法访问config server服务端
    name: admin
    password: admin
  basic:
    enabled: true



encrypt:
#  对称性加密 本地需要先安装curl
# 执行 curl localhost:8888/encrypt -d looper123
#得到 looper123 加密后 543f65989a17283dedc051e7646c0bf0e590fdb6f26e8e0b3f95d7740f78d63ef88b151b05ce7e7943b22df245dd98a5
# 在执行 curl localhost:8888/decrypt -d  543f65989a17283dedc051e7646c0bf0e590fdb6f26e8e0b3f95d7740f78d63ef88b151b05ce7e7943b22df245dd98a5
# 可以得到解密后的原文 looper123

#  key: '{cipher}543f65989a17283dedc051e7646c0bf0e590fdb6f26e8e0b3f95d7740f78d63ef88b151b05ce7e7943b22df245dd98a5'

# 非对称性加密
#一次性生成keystore文件 并且设置所有参数 密码、存活时间。。。
#keytool -genkeypair -alias config-server -keyalg RSA -dname "CN=zhaiyongchao, OU=company, O=organization,
#L=city, ST=province,C=china" -keypass 222222  -keystore config-server.keystore -storepass 111111  -validity 365
  keyStore:
#    生成的加密文件保存路径
    location: classpath:config-server.keystore
    password: 111111
    alias: config-server
    secret: 222222

#  fail-on-error: true


#  oauth2:
#    client:
#      access-token-uri: ${vcap.services.${PREFIX:}sso.credentials.tokenUri:}
#      user-authorization-uri: ${vcap.services.${PREFIX:}sso.credentials.authorizationUri:}
#      client-id: ${vcap.services.${PREFIX:}sso.credentials.clientId:}
#      client-secret: ${vcap.services.${PREFIX:}sso.credentials.clientSecret:}
#    resource:
#      token-info-uri: ${vcap.services.${OAUTH2_RESOURCE_SERVICEID:${oauth2.resource.serviceId:sso}}.credentials.tokenInfoUri:}
#      service-id: ${PREFIX:}resource

